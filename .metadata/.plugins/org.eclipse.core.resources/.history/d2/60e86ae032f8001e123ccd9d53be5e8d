package com.paulo.workshopmongo.service;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.paulo.workshopmongo.domain.User;
import com.paulo.workshopmongo.dto.UserDto;
import com.paulo.workshopmongo.repository.UserRepository;

@Service
public class UserService {
	@Autowired
	private UserRepository repo;

	public List<User> findAll() {
		return repo.findAll();

	}

	public User findById(String id) {
		Optional<User> userOptional = repo.findById(id);
		if (userOptional.isPresent()) {
			return userOptional.get();
		} else {

			return null;
		}
	}

	public User insert(User obj) {

		return repo.insert(obj);
	}
	
	public void delete(String id) {
	    repo.deleteById(id);
	
	}

	public User fromDto(UserDto objDto) {

		return new User(objDto.getId(), objDto.getName(), objDto.getEmail());
	}
	public User update(User obj) {
	    // Busca o usuário no banco de dados pelo ID fornecido
	    Optional<User> userOptional = repo.findById(obj.getId());
	    
	    // Verifica se o usuário existe
	    if (userOptional.isPresent()) {
	        // Se o usuário existe, obtém o objeto do usuário
	        User existingUser = userOptional.get();
	        
	        // Atualiza os dados do usuário existente com os dados fornecidos no objeto 'obj'
	        updateData(existingUser, obj);
	        
	        // Salva e retorna o usuário atualizado
	        return repo.save(existingUser);
	    } else {
	        // Se o usuário não existe, você pode lançar uma exceção ou lidar com isso de outra maneira,
	        // dependendo dos requisitos do seu aplicativo
	        throw new EntityNotFoundException("Usuário não encontrado com ID: " + obj.getId());
	    }
	}

	private void updateData(User existingUser, User obj) {
	    // Atualiza os campos do usuário existente com os dados fornecidos no objeto 'obj'
	    // Implemente esta lógica conforme necessário para os campos que deseja atualizar
	    existingUser.setNome(obj.getName());
	    existingUser.setEmail(obj.getEmail());
	    // Adicione outras atualizações conforme necessário
	}

}
